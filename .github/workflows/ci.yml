name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  publish:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: macos-aarch64
            platform: macos-15
            host: "aarch64-apple-darwin"
          - name: macos-x86_64
            platform: macos-13
            host: "x86_64-apple-darwin"

          - name: ubuntu-aarch64
            platform: ubuntu-24.04-arm
            host: "aarch64-unknown-linux-gnu"
          - name: ubuntu-x86_64
            platform: ubuntu-24.04
            host: "x86_64-unknown-linux-gnu"

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4

      - if: runner.os == 'macOS'
        run: brew install tree

      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libtool libusb-1.0-0-dev

      - if: matrix.name == 'macos-x86_64'
        run: tree -L 3 /opt/homebrew/Cellar/

      - name: Build dfu-util
        if: runner.os == 'macOS'
        run: gcc -I/opt/homebrew/opt/libusb/include/libusb-1.0 -L/opt/homebrew/opt/libusb/lib -DHAVE_CONFIG_H -o dfu-util main.c dfu_load.c dfu_util.c dfuse.c dfuse_mem.c dfu.c dfu_file.c quirks.c -lusb-1.0

      - name: Build dfu-util
        if: runner.os == 'Linux'
        run: gcc -I/usr/include/libusb-1.0 -L/usr/lib/x86_64-linux-gnu/ -DHAVE_CONFIG_H -o dfu-util main.c dfu_load.c dfu_util.c dfuse.c dfuse_mem.c dfu.c dfu_file.c quirks.c -lusb-1.0

      - name: Rename binary
        shell: bash
        run: |
          bin_path="dfu-util"
          cp "$bin_path" "dfu-util-${{ matrix.host }}"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dfu-util-${{ matrix.host }}
          path: dfu-util-${{ matrix.host }}

  publish-windows:
    defaults:
      run:
        shell: msys2 {0}
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: windows-aarch64
            platform: windows-11-arm
            host: "aarch64-pc-windows-msvc"
          - name: windows-x86_64
            platform: windows-2025
            host: "x86_64-pc-windows-msvc"

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            base-devel
            gcc

      - name: Download libusb
        shell: pwsh
        run: |
          $zipPath = "$env:RUNNER_TEMP\libusb.7z"
          $extractPath = "$env:RUNNER_TEMP\libusb"
          Invoke-WebRequest -Uri "https://github.com/libusb/libusb/releases/download/v1.0.29/libusb-1.0.29.7z" -OutFile $zipPath
          Expand-Archive -Path $zipPath -DestinationPath $extractPath

      - name: Build dfu-util
        shell: pwsh
        run: |
          $includePath = "$env:RUNNER_TEMP\libusb\include"
          $dllPath = "$env:RUNNER_TEMP\libusb\MinGW64\dll"
          $staticPath = "$env:RUNNER_TEMP\libusb\MinGW64\static"
          gcc -I"$includePath" -L"$dllPath" -L"$staticPath" -DHAVE_WINDOWS_H -o dfu-util main.c dfu_load.c dfu_util.c dfuse.c dfuse_mem.c dfu.c dfu_file.c quirks.c -lusb-1.0

      - name: Rename binary
        shell: bash
        run: |
          bin_path="dfu-util.exe"
          cp "$bin_path" "dfu-util-${{ matrix.host }}.exe"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dfu-util-${{ matrix.host }}.exe
          path: dfu-util-${{ matrix.host }}.exe
